We are creating a MVVM (View-independent of model) in .NET Framewrok.
1- Greate Git Repo and clone it, then pull it in a folder
2- Create a blank solution in that directory, dont limit it to C#, it can be any language
3- Create the first project TRMDataManager, ASP>NET FRamework, with web API
	and Indiv. user. authe.
4- debugg the project, explore API tab, try posting a new user to https://localhost:44304/api/Account/Register
	in PostMan, with Email, pass, confirm pass. 
		{
		"Email": "test@niloo.se",
		"Password": "Test123***",
		"ConfirmPassword": "Test123***"
		}

	then try to Get() https://localhost:44304/token to have the token;
		Fill the tabel: grant_type: password
						username: test@niloo.se
						password: Test123***
	Use that token Get() api/Values https://localhost:44304/api/values
	It wil be needed to add token (userId) to see value1 and value2
5- If you need your Get() to be freed from types, use IHttpActionResult and use return Ok(wrap here all you want to get)
        public IHttpActionResult Get()
        {
            string userId = RequestContext.Principal.Identity.GetUserId();
            return Ok(new string[] { "value1", "value2", userId });
        }
		instead of         public IEnumerable<string> Get()

	**Not a good idea, you may change the type any where any time, not good
-------------
6- I installed Swashbuckle in NuGet, then by adding /swagger to the main URL, I see Swagger UI, 
	with two sections Values and Accounts
7- Configure Swagger> App_start> SwaggerConfig> Get to know diff. options!
8- create under App_start> AuthTokenOperation which inherits from IDocumentFilter
	complete the code, no matter if copy paste
	Then add c.DocumentFilter<AuthTokenOperation>(); to SwaggerConfig, right after enable method
	We set the @default, i.e. grantType, to password, so by entering user and pass in Auth section of swagger
		So I will see my token.
9- create AuthorizationOperationFilter which inherits from IOperationFilter
	Apply the code inside. 
	go to SwaggerConfig> under c.Document... add> c.OperationFilter<AuthorizationOperationFilter>();
	Now if you debugg to /swagger, GET /api/Values under Values has a param. 
		Get token from auth section, add it to that Get Value part, you will access the info. 
		bearer <Token>


